import org.apache.tools.ant.filters.ReplaceTokens

plugins {
    id "java-library"
    id "com.github.johnrengelman.shadow" version "7.1.0"
    id "maven-publish"
}

group = 'xyz.oribuin'
version = '1.0-SNAPSHOT'
sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

java {
    toolchain.languageVersion.set(JavaLanguageVersion.of(21))
    disableAutoTargetJvm()
}


compileJava {
    options.compilerArgs += ['-parameters']
    options.fork = true
    options.encoding = 'UTF-8'
}

repositories {
    mavenCentral()
    mavenLocal()

    maven { url = "https://libraries.minecraft.net" }
    maven { url = "https://repo.papermc.io/repository/maven-public/" }
    maven { url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/" }
    maven { url = "https://repo.rosewooddev.io/repository/public/" }
    maven { url = "https://repo.extendedclip.com/content/repositories/placeholderapi/" }
    maven { url = "https://repo.codemc.org/repository/maven-public/" }
    maven { url = "https://jitpack.io" }
    maven { url = "https://repo.mattstudios.me/artifactory/public/" }
}

dependencies {
    api "dev.rosewood:rosegarden:${gardenVersion}"
    api("dev.triumphteam:triumph-gui:${triumphVersion}") {  // https://mf.mattstudios.me/triumph-gui/introduction
        exclude group: "com.google.code.gson", module: "gson" // Remove GSON, Already included in spigot api
        exclude group: "net.kyori", module: "*" // Remove kyori
    }

    compileOnly "io.papermc.paper:paper-api:${spigotVersion}-R0.1-SNAPSHOT"
    compileOnly "com.mojang:authlib:${authLibVersion}"
    compileOnly "com.github.MilkBowl:VaultAPI:${vaultVersion}"

    implementation "net.objecthunter:exp4j:${exp4jVersion}"
    implementation "com.jeff-media:MorePersistentDataTypes:${persistentDataTypeVersion}"
}

shadowJar {
    archiveClassifier.set(null)

    relocate("dev.rosewood.rosegarden", "${project.group}.fishing.libs.rosegarden")
    relocate("com.jeff_media.morepersistentdatatypes", "${project.group}.fishing.libs.pdt")
    relocate("net.objecthunter.exp4j", "${project.group}.fishing.libs.exp4j")
    relocate("dev.triumphteam.gui", "${project.group}.fishing.libs.triumphgui")
}

// Include version replacement
processResources {
    from(sourceSets.main.resources.srcDirs) {
        include '**/*.yml'
        filter ReplaceTokens, tokens: ["version": project.property("version")]
        duplicatesStrategy DuplicatesStrategy.INCLUDE
    }
}

// Javadocs :)
javadoc {
    options {
        links("https://jd.papermc.io/paper/${spigotVersion}/")
    }
}

// Jar Publishing
publishing {
    publications {
        shadow(MavenPublication) { publication ->
            project.shadow.component(publication)
            artifactId = "fishing"
            pom {
                name = "fishing"
            }
        }
    }

    repositories {
        if (project.hasProperty('mavenUser') && project.hasProperty('mavenPassword')) {
            maven {
                credentials {
                    username project.mavenUser
                    password project.mavenPassword
                }

                def releasesRepoUrl = 'https://repo.rosewooddev.io/repository/public-releases/'
                def snapshotsRepoUrl = 'https://repo.rosewooddev.io/repository/public-snapshots/'
                url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            }
        }
    }
}

build.dependsOn shadowJar